#include<iostream>
#include<math.h>
using namespace std;
size_t Euclidean(int a, int b)
{
	int r = a % b;
	if (r == 0)
	{
		return b;
	}
	return Euclidean(b, r);
}

int main()
{
	int N;
	cin >> N;
	int** number = new int* [N];
	int** wowariNumber = new int* [N];
	for (int i = 0; i < N; i++)
	{
		number[i] = new int[4];
		wowariNumber[i] = new int[4];
		for (size_t s = 0; s < 4; s++)
		{
			cin >> number[i][s];
			wowariNumber[i][s] = number[i][s];
		}
	}

	for (size_t i = 0; i < N; i++)
	{
		if (number[i][1] == 0 || number[i][3] == 0) { cout << "입력오류" << endl; continue; }
		if (number[i][1] != number[i][3])
		{
			number[i][0] *= number[i][3];
			number[i][2] *= number[i][1];
			number[i][1] *= number[i][3];
			number[i][3] = number[i][1];
		}

		wowariNumber[i][0] = number[i][0] + number[i][2];
		wowariNumber[i][1] = number[i][1];
		wowariNumber[i][2] = number[i][0] - number[i][2];
		wowariNumber[i][3] = number[i][3];
		int temp = Euclidean(wowariNumber[i][0], wowariNumber[i][1]);
		if (temp != 1 && temp != wowariNumber[i][0] && temp != wowariNumber[i] [1] ) {
			wowariNumber[i][0] /= abs(temp);
			wowariNumber[i][1] /= abs(temp);
		}
		temp = Euclidean(wowariNumber[i][2], wowariNumber[i][3]);
		if (temp != 1 && temp != wowariNumber[i][2] && temp != wowariNumber[i][3]) {
			wowariNumber[i][2] /= abs(temp);
			wowariNumber[i][3] /= abs(temp);
		}

		cout <<  wowariNumber[i][2] << "/" << wowariNumber[i][3] <<", ";
		cout << wowariNumber[i][0] << "/" <<wowariNumber[i][1] << endl; 
	}
}
